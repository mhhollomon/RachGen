
$medium-width : 700px;
$desktop-width : 800px;

/* The first row in the list of chords that contain column actions */
.chord-action-header-container {
    display : grid;
    grid-template-columns: [lock-button] 3rem [play-button] 2rem [add-area] 1fr [right-action] minmax(3rem, auto);
    column-gap: 0.5rem;
    border-bottom : 1px #888888 solid;
    transition: background 0.75s;
    position : relative;

}

.chord-header-lock {
    grid-column-start: lock-button;
    align-self: center;
}

.chord-header-play {
    grid-column-start: play-button;
    align-self: center;
    justify-self: center;
}

.chord-add-action {
    grid-column-start:  add-area;
    align-self: center;
    justify-self: center;
    // To align with the hover buttons in the row below
    // And the action buttons on its own row. trial-and-error.
    position: absolute;
    top : calc(50% - 1.5rem);
    left : calc(50% - 5rem);
}

.header-right-action {
    grid-column-start:  right-action;
}



//*******************************************
// Main body of the chord list
//*******************************************

%chord-container-styles  {
    display : grid;
    grid-template-columns: [lock-button] 3rem [play-button] 2rem [chord-main] minmax(10rem, 1fr) [right-action] minmax(3rem, auto);
    column-gap: 0.5rem;
    border-bottom : 1px #888888 solid;
    transition: background 0.75s;
}

$hightlight-color-darker : #d1d1d1;
$hightlight-color-lighter : #212121;

.chord-row-container {
    @extend %chord-container-styles;
    position : relative;
}

:host-context(.darkMode) .chord-row-container:hover {
    background-color : $hightlight-color-lighter;
}

.chord-row-container:hover {
    background-color : $hightlight-color-darker;
}


:host-context(.darkMode) .chord-row-container.playing {
    background-color : $hightlight-color-lighter;
}

.chord-row-container.playing {
    background-color : $hightlight-color-darker;
}

//------------------------
// columns in chord-row-container
//------------------------

.chord-lock {
    grid-column-start: lock-button;
    align-self: center;
}

.chord-play {
    grid-column-start: play-button;
    align-self: center;
    justify-self: center;
}

.chord-main {
    grid-column-start:  chord-main;
    width: 100%;
    height : 100%;
    align-self: center;
    justify-self: flex-start;
}

.chord-right-action {
    grid-column-start:  right-action;
    align-self: center;
    justify-self: right;
}



//---- container for the chord-main area

.chord-main-container {
    display : grid;
    grid-template-columns: [hover-col] 1px [chord-name chord-tones chord-scale] minmax(10rem, 1fr);
    align-items: center;
    justify-items : start;
    gap : 1rem;

}

@media only screen and (min-width : $medium-width) {
    .chord-main-container {
        grid-template-columns: [hover-col] 1px [chord-name] minmax(4em, 12rem) [chord-tones chord-scale] minmax(10rem, 1fr);
    }

}

@media only screen and (min-width : $desktop-width) {
    .chord-main-container {
        grid-template-columns: [hover-col] 1px [chord-name] minmax(4em, 12rem) [chord-tones] minmax(4rem, 1fr) [chord-scale] 1fr;
    }

}

     

//-----------------
// Columns inside chord-main

.chord-main-hover {
    grid-column-start:  hover-col;
}

.chord-name {
    grid-column-start: chord-name;
    align-self : center;
    font-weight : bold;
}

@media (min-width : $medium-width) {
    .chord-name {
        font-weight : normal;
    }
}

.chord-tones {
    grid-column-start: chord-tones;
    display : flex;
    flex-wrap: wrap;
    gap : 1rem;
}

.chord-scale {
    grid-column-start: chord-scale;
}


//*******************************
// Hovers for the add buttons
//*******************************

.hover-item {
    display : none;
    // bleah - can't transition on display
    // leave here just in case you can in the future.
    transition-property: display;
    transition-duration: 1s;
    position : absolute;
    border : 1px solid rgb(250, 250, 250);
    width : 2rem;
}

:host-context(.darkMode) .hover-item {
    display : none;
    position : absolute;
    border : 1px solid rgb(48, 48, 48);
}

.hover-item.hover-top {
    border-radius : 0 0 50% 50%;
    left : 50%;
    top : 0;
}

.hover-item.hover-bottom {
    border-radius: 50% 50% 0 0;
    left : 50%;
    bottom : 0;
}

.chord-main:hover .hover-item {
    display: block;
}


/********************************************
 * Styles for the expansion panel at the top of the chord list
 ********************************************/

 %panel-grid-template {
    display : grid;
    grid-template-columns: [lockbutton] 3rem [key] 9rem [buttons] 1fr;
 }

.chord-panel-title-container {
    @extend %panel-grid-template;
    width : 100%;
}

// main point of this is the color attribute.
// Force the title to be shown not "grayed-out"
// even when the expansion panel is disabled.
.chord-panel-title-key {
    grid-column-start: key;
    align-self: center;
}

// Force the action buttons to move to the
// far right.
.chord-panel-title-buttons {
    grid-column-start:  buttons;
    align-self: center;
    justify-self: end;
}

// --- The content in the exapnsion area.

.chord-panel-content-container {
    @extend %panel-grid-template;
    width : 100%;
}

.chord-panel-content-button {
    grid-column-start: key;
    align-self: center;   
}

.chord-panel-content-info {
    grid-column-start:  buttons;
    align-self: center;
    justify-self : start;
}


.mdc-fab--mini {
    transform : scale(0.5);
}


.small-input {
    // This is tuned to make two of them 
    // the same size as one "normal"
    max-width: 106px;
}


.menu-anchor {
    text-decoration: underline;
}

.menu-anchor:hover {
    text-decoration: underline;
    font-weight: bold;
}
